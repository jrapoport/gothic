// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.5
// source: codes.proto

package codes

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CodeFormat int32

const (
	CodeFormat_Invite CodeFormat = 0
	CodeFormat_PIN    CodeFormat = 1
)

// Enum value maps for CodeFormat.
var (
	CodeFormat_name = map[int32]string{
		0: "Invite",
		1: "PIN",
	}
	CodeFormat_value = map[string]int32{
		"Invite": 0,
		"PIN":    1,
	}
)

func (x CodeFormat) Enum() *CodeFormat {
	p := new(CodeFormat)
	*p = x
	return p
}

func (x CodeFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CodeFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_codes_proto_enumTypes[0].Descriptor()
}

func (CodeFormat) Type() protoreflect.EnumType {
	return &file_codes_proto_enumTypes[0]
}

func (x CodeFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CodeFormat.Descriptor instead.
func (CodeFormat) EnumDescriptor() ([]byte, []int) {
	return file_codes_proto_rawDescGZIP(), []int{0}
}

type CodeUsage int32

const (
	CodeUsage_Infinite CodeUsage = 0
	CodeUsage_Single   CodeUsage = 1
	CodeUsage_Multi    CodeUsage = 2
	CodeUsage_Timed    CodeUsage = 3
)

// Enum value maps for CodeUsage.
var (
	CodeUsage_name = map[int32]string{
		0: "Infinite",
		1: "Single",
		2: "Multi",
		3: "Timed",
	}
	CodeUsage_value = map[string]int32{
		"Infinite": 0,
		"Single":   1,
		"Multi":    2,
		"Timed":    3,
	}
)

func (x CodeUsage) Enum() *CodeUsage {
	p := new(CodeUsage)
	*p = x
	return p
}

func (x CodeUsage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CodeUsage) Descriptor() protoreflect.EnumDescriptor {
	return file_codes_proto_enumTypes[1].Descriptor()
}

func (CodeUsage) Type() protoreflect.EnumType {
	return &file_codes_proto_enumTypes[1]
}

func (x CodeUsage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CodeUsage.Descriptor instead.
func (CodeUsage) EnumDescriptor() ([]byte, []int) {
	return file_codes_proto_rawDescGZIP(), []int{1}
}

type CreateSignupCodesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uses  int64 `protobuf:"varint,1,opt,name=uses,proto3" json:"uses,omitempty"`
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CreateSignupCodesRequest) Reset() {
	*x = CreateSignupCodesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_codes_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSignupCodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSignupCodesRequest) ProtoMessage() {}

func (x *CreateSignupCodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_codes_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSignupCodesRequest.ProtoReflect.Descriptor instead.
func (*CreateSignupCodesRequest) Descriptor() ([]byte, []int) {
	return file_codes_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSignupCodesRequest) GetUses() int64 {
	if x != nil {
		return x.Uses
	}
	return 0
}

func (x *CreateSignupCodesRequest) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CreateSignupCodesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Codes []string `protobuf:"bytes,1,rep,name=codes,proto3" json:"codes,omitempty"`
}

func (x *CreateSignupCodesResponse) Reset() {
	*x = CreateSignupCodesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_codes_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSignupCodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSignupCodesResponse) ProtoMessage() {}

func (x *CreateSignupCodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_codes_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSignupCodesResponse.ProtoReflect.Descriptor instead.
func (*CreateSignupCodesResponse) Descriptor() ([]byte, []int) {
	return file_codes_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSignupCodesResponse) GetCodes() []string {
	if x != nil {
		return x.Codes
	}
	return nil
}

type CheckSignupCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *CheckSignupCodeRequest) Reset() {
	*x = CheckSignupCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_codes_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckSignupCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckSignupCodeRequest) ProtoMessage() {}

func (x *CheckSignupCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_codes_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckSignupCodeRequest.ProtoReflect.Descriptor instead.
func (*CheckSignupCodeRequest) Descriptor() ([]byte, []int) {
	return file_codes_proto_rawDescGZIP(), []int{2}
}

func (x *CheckSignupCodeRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type CheckSignupCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Usable     bool                 `protobuf:"varint,1,opt,name=usable,proto3" json:"usable,omitempty"`
	Code       string               `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	CodeFormat CodeFormat           `protobuf:"varint,3,opt,name=code_format,json=codeFormat,proto3,enum=codes.CodeFormat" json:"code_format,omitempty"`
	CodeType   CodeUsage            `protobuf:"varint,4,opt,name=code_type,json=codeType,proto3,enum=codes.CodeUsage" json:"code_type,omitempty"`
	Expiration *durationpb.Duration `protobuf:"bytes,5,opt,name=expiration,proto3" json:"expiration,omitempty"`
	UserId     string               `protobuf:"bytes,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *CheckSignupCodeResponse) Reset() {
	*x = CheckSignupCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_codes_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckSignupCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckSignupCodeResponse) ProtoMessage() {}

func (x *CheckSignupCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_codes_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckSignupCodeResponse.ProtoReflect.Descriptor instead.
func (*CheckSignupCodeResponse) Descriptor() ([]byte, []int) {
	return file_codes_proto_rawDescGZIP(), []int{3}
}

func (x *CheckSignupCodeResponse) GetUsable() bool {
	if x != nil {
		return x.Usable
	}
	return false
}

func (x *CheckSignupCodeResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CheckSignupCodeResponse) GetCodeFormat() CodeFormat {
	if x != nil {
		return x.CodeFormat
	}
	return CodeFormat_Invite
}

func (x *CheckSignupCodeResponse) GetCodeType() CodeUsage {
	if x != nil {
		return x.CodeType
	}
	return CodeUsage_Infinite
}

func (x *CheckSignupCodeResponse) GetExpiration() *durationpb.Duration {
	if x != nil {
		return x.Expiration
	}
	return nil
}

func (x *CheckSignupCodeResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type VoidSignupCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *VoidSignupCodeRequest) Reset() {
	*x = VoidSignupCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_codes_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoidSignupCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoidSignupCodeRequest) ProtoMessage() {}

func (x *VoidSignupCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_codes_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoidSignupCodeRequest.ProtoReflect.Descriptor instead.
func (*VoidSignupCodeRequest) Descriptor() ([]byte, []int) {
	return file_codes_proto_rawDescGZIP(), []int{4}
}

func (x *VoidSignupCodeRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

var File_codes_proto protoreflect.FileDescriptor

var file_codes_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x63,
	0x6f, 0x64, 0x65, 0x73, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x44, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x75,
	0x70, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x31, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x2c, 0x0a, 0x16, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xfc, 0x01, 0x0a, 0x17, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x32, 0x0a, 0x0b, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x2e, 0x43, 0x6f,
	0x64, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x0a, 0x63, 0x6f, 0x64, 0x65, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x12, 0x2d, 0x0a, 0x09, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2b, 0x0a, 0x15, 0x56, 0x6f, 0x69, 0x64, 0x53,
	0x69, 0x67, 0x6e, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x2a, 0x21, 0x0a, 0x0a, 0x43, 0x6f, 0x64, 0x65, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x10, 0x00, 0x12, 0x07,
	0x0a, 0x03, 0x50, 0x49, 0x4e, 0x10, 0x01, 0x2a, 0x3b, 0x0a, 0x09, 0x43, 0x6f, 0x64, 0x65, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x65,
	0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x10, 0x01, 0x12, 0x09,
	0x0a, 0x05, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x69, 0x6d,
	0x65, 0x64, 0x10, 0x03, 0x32, 0xff, 0x01, 0x0a, 0x05, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x58,
	0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x43, 0x6f,
	0x64, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x2e, 0x63, 0x6f,
	0x64, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63, 0x6f, 0x64,
	0x65, 0x73, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0e,
	0x56, 0x6f, 0x69, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c,
	0x2e, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x75,
	0x70, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x72, 0x61, 0x70, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x67,
	0x6f, 0x74, 0x68, 0x69, 0x63, 0x2f, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x2f, 0x72, 0x70, 0x63, 0x2f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x3b, 0x63, 0x6f, 0x64, 0x65,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_codes_proto_rawDescOnce sync.Once
	file_codes_proto_rawDescData = file_codes_proto_rawDesc
)

func file_codes_proto_rawDescGZIP() []byte {
	file_codes_proto_rawDescOnce.Do(func() {
		file_codes_proto_rawDescData = protoimpl.X.CompressGZIP(file_codes_proto_rawDescData)
	})
	return file_codes_proto_rawDescData
}

var file_codes_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_codes_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_codes_proto_goTypes = []interface{}{
	(CodeFormat)(0),                   // 0: codes.CodeFormat
	(CodeUsage)(0),                    // 1: codes.CodeUsage
	(*CreateSignupCodesRequest)(nil),  // 2: codes.CreateSignupCodesRequest
	(*CreateSignupCodesResponse)(nil), // 3: codes.CreateSignupCodesResponse
	(*CheckSignupCodeRequest)(nil),    // 4: codes.CheckSignupCodeRequest
	(*CheckSignupCodeResponse)(nil),   // 5: codes.CheckSignupCodeResponse
	(*VoidSignupCodeRequest)(nil),     // 6: codes.VoidSignupCodeRequest
	(*durationpb.Duration)(nil),       // 7: google.protobuf.Duration
	(*emptypb.Empty)(nil),             // 8: google.protobuf.Empty
}
var file_codes_proto_depIdxs = []int32{
	0, // 0: codes.CheckSignupCodeResponse.code_format:type_name -> codes.CodeFormat
	1, // 1: codes.CheckSignupCodeResponse.code_type:type_name -> codes.CodeUsage
	7, // 2: codes.CheckSignupCodeResponse.expiration:type_name -> google.protobuf.Duration
	2, // 3: codes.Codes.CreateSignupCodes:input_type -> codes.CreateSignupCodesRequest
	4, // 4: codes.Codes.CheckSignupCode:input_type -> codes.CheckSignupCodeRequest
	6, // 5: codes.Codes.VoidSignupCode:input_type -> codes.VoidSignupCodeRequest
	3, // 6: codes.Codes.CreateSignupCodes:output_type -> codes.CreateSignupCodesResponse
	5, // 7: codes.Codes.CheckSignupCode:output_type -> codes.CheckSignupCodeResponse
	8, // 8: codes.Codes.VoidSignupCode:output_type -> google.protobuf.Empty
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_codes_proto_init() }
func file_codes_proto_init() {
	if File_codes_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_codes_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSignupCodesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_codes_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSignupCodesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_codes_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckSignupCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_codes_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckSignupCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_codes_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoidSignupCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_codes_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_codes_proto_goTypes,
		DependencyIndexes: file_codes_proto_depIdxs,
		EnumInfos:         file_codes_proto_enumTypes,
		MessageInfos:      file_codes_proto_msgTypes,
	}.Build()
	File_codes_proto = out.File
	file_codes_proto_rawDesc = nil
	file_codes_proto_goTypes = nil
	file_codes_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CodesClient is the client API for Codes service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CodesClient interface {
	CreateSignupCodes(ctx context.Context, in *CreateSignupCodesRequest, opts ...grpc.CallOption) (*CreateSignupCodesResponse, error)
	CheckSignupCode(ctx context.Context, in *CheckSignupCodeRequest, opts ...grpc.CallOption) (*CheckSignupCodeResponse, error)
	VoidSignupCode(ctx context.Context, in *VoidSignupCodeRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type codesClient struct {
	cc grpc.ClientConnInterface
}

func NewCodesClient(cc grpc.ClientConnInterface) CodesClient {
	return &codesClient{cc}
}

func (c *codesClient) CreateSignupCodes(ctx context.Context, in *CreateSignupCodesRequest, opts ...grpc.CallOption) (*CreateSignupCodesResponse, error) {
	out := new(CreateSignupCodesResponse)
	err := c.cc.Invoke(ctx, "/codes.Codes/CreateSignupCodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *codesClient) CheckSignupCode(ctx context.Context, in *CheckSignupCodeRequest, opts ...grpc.CallOption) (*CheckSignupCodeResponse, error) {
	out := new(CheckSignupCodeResponse)
	err := c.cc.Invoke(ctx, "/codes.Codes/CheckSignupCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *codesClient) VoidSignupCode(ctx context.Context, in *VoidSignupCodeRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/codes.Codes/VoidSignupCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CodesServer is the server API for Codes service.
type CodesServer interface {
	CreateSignupCodes(context.Context, *CreateSignupCodesRequest) (*CreateSignupCodesResponse, error)
	CheckSignupCode(context.Context, *CheckSignupCodeRequest) (*CheckSignupCodeResponse, error)
	VoidSignupCode(context.Context, *VoidSignupCodeRequest) (*emptypb.Empty, error)
}

// UnimplementedCodesServer can be embedded to have forward compatible implementations.
type UnimplementedCodesServer struct {
}

func (*UnimplementedCodesServer) CreateSignupCodes(context.Context, *CreateSignupCodesRequest) (*CreateSignupCodesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSignupCodes not implemented")
}
func (*UnimplementedCodesServer) CheckSignupCode(context.Context, *CheckSignupCodeRequest) (*CheckSignupCodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckSignupCode not implemented")
}
func (*UnimplementedCodesServer) VoidSignupCode(context.Context, *VoidSignupCodeRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VoidSignupCode not implemented")
}

func RegisterCodesServer(s *grpc.Server, srv CodesServer) {
	s.RegisterService(&_Codes_serviceDesc, srv)
}

func _Codes_CreateSignupCodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSignupCodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CodesServer).CreateSignupCodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/codes.Codes/CreateSignupCodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CodesServer).CreateSignupCodes(ctx, req.(*CreateSignupCodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Codes_CheckSignupCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckSignupCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CodesServer).CheckSignupCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/codes.Codes/CheckSignupCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CodesServer).CheckSignupCode(ctx, req.(*CheckSignupCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Codes_VoidSignupCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VoidSignupCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CodesServer).VoidSignupCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/codes.Codes/VoidSignupCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CodesServer).VoidSignupCode(ctx, req.(*VoidSignupCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Codes_serviceDesc = grpc.ServiceDesc{
	ServiceName: "codes.Codes",
	HandlerType: (*CodesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateSignupCodes",
			Handler:    _Codes_CreateSignupCodes_Handler,
		},
		{
			MethodName: "CheckSignupCode",
			Handler:    _Codes_CheckSignupCode_Handler,
		},
		{
			MethodName: "VoidSignupCode",
			Handler:    _Codes_VoidSignupCode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "codes.proto",
}

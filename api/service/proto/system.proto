syntax = "proto3";

package gothic.api;

option go_package = "github.com/jrapoport/gothic/api/grpc/rpc/system";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";

service System {
  // user
  rpc GetUserAccount (UserAccountRequest) returns (UserAccountResponse) {
  }
  rpc SendEmail (EmailRequest) returns (EmailResponse) {
  }
  // linked
  rpc LinkAccount (LinkAccountRequest) returns (google.protobuf.Empty) {
  }
  rpc GetLinkedAccounts (LinkedAccountsRequest) returns (LinkedAccountsResponse) {
  }
}

message UserAccountRequest {
  oneof user {
    string user_id = 1;
    string email = 2;
  }
}

message UserAccountResponse{
  string id = 1;
  string provider = 2;
  string role = 3;
  enum Status {
    BANNED = 0;
    LOCKED = 1;
    RESTRICTED = 2;
    ACTIVE = 3;
    VERIFIED = 4;
  }
  Status status = 4;
  string email = 5;
  string username = 6;
  google.protobuf.Struct data = 7;
  google.protobuf.Struct metadata = 8;
  google.protobuf.Timestamp created_at = 9;
  google.protobuf.Timestamp confirmed_at = 10;
  google.protobuf.Timestamp verified_at = 11;
}

message EmailRequest {
  string user_id = 1;
  string subject = 2;
  oneof content {
    string html = 3;
    string markdown = 4;
    string body = 5;
  }
  // only applies to content_html
  optional string plaintext = 7;
}

message EmailResponse {
  bool sent = 1;
}

enum LinkedType {
  NONE = 0;
  AUTH = 1;
  PAYMENT = 2;
  WALLET = 4;
  ANY = 0xfffffff;
}

message LinkedAccount {
  fixed32 type = 1;
  string provider = 2;
  string account_id = 3;
  string email = 4;
  google.protobuf.Struct data = 5;
}

message LinkAccountRequest {
  string user_id = 1;
  LinkedAccount account = 2;
}

message LinkedAccountsRequest {
  string user_id = 1;
  optional fixed32 type = 2;
  optional string provider = 3;
  map<string, string> filters = 4;
}

message LinkedAccountsResponse {
  repeated LinkedAccount linked = 1;
}
